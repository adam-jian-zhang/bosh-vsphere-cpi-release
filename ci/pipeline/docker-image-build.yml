# fly -t bosh-vsphere sp -p docker-image-build -c ci/pipeline/docker-image-build.yml
jobs:
- name: build-vcpi-main-image
  plan:
  - in_parallel:
    - get: source-ci
    - get: source-ci-trigger
      trigger: true
    - get: bosh-golang-release-image
      trigger: true
    - get: oci-build-task-registry-image
  - task: build
    image: oci-build-task-registry-image
    config:
      inputs:
      - name: source-ci
      outputs:
      - name: image
      params:
        CONTEXT: source-ci/
        DOCKERFILE: source-ci/ci/docker/Dockerfile
        IMAGE_PLATFORM: linux/amd64
        OUTPUT_OCI: true
      platform: linux
      run:
        path: build
    privileged: true
  - put: vcpi-main-image
    params:
      image: image/image
resources:
- name: source-ci
  source:
    branch: master
    paths:
    - ci
    private_key: ((github_deploy_key_bosh-vsphere-cpi-release.private_key))
    uri: git@github.com:cloudfoundry/bosh-vsphere-cpi-release.git
  type: git
- name: source-ci-trigger
  source:
    branch: master
    paths:
    - ci/docker
    private_key: ((github_deploy_key_bosh-vsphere-cpi-release.private_key))
    uri: git@github.com:cloudfoundry/bosh-vsphere-cpi-release.git
  type: git
  check_every: 1h
- name: vcpi-main-image
  source:
    repository: bosh/vsphere-vcpi
    tag: latest
    username: ((docker.username))
    password: ((docker.password))
  type: registry-image
  check_every: never
- name: bosh-golang-release-image
  type: registry-image
  source:
    repository: bosh/golang-release
    username: ((docker.username))
    password: ((docker.password))
- name: oci-build-task-registry-image
  type: registry-image
  source:
    repository: concourse/oci-build-task
    username: ((docker.username))
    password: ((docker.password))
